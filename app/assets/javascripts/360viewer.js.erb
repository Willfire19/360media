var camera, scene, renderer;
var effect, controls;
var element, container;

// var divId = $('#example');
// console.log("Container div: " + divId);

var vr = $('#example').data('vr') || $('#vr').data('vr');

var clock = new THREE.Clock();



init();
animate();

// var elvisLives = Math.PI > 4 ? "Yep" : "Nope";
function init() {
  renderer = new THREE.WebGLRenderer();
  element = renderer.domElement;
  container = (document.getElementById('example') == null) ? document.getElementById('vr') : document.getElementById('example');
  console.log(container);
  container.appendChild(element);

  if( vr == true ){
    effect = new THREE.StereoEffect(renderer);
  }

  scene = new THREE.Scene();

  camera = new THREE.PerspectiveCamera(90, 1, 0.001, 700);
  // camera.position.set(0, 10, 0);
  camera.position.set(0, 10, 0);
  
  scene.add(camera);

  controls = new THREE.OrbitControls(camera, element);
  controls.rotateUp(Math.PI / 4);
  controls.target.set(
    camera.position.x + 0.1,
    camera.position.y,
    camera.position.z
  );
  controls.noZoom = true;
  controls.noPan = true;

  

  function setOrientationControls(e) {
    if (!e.alpha) {
      return;
    }

    controls = new THREE.DeviceOrientationControls(camera, true);
    controls.connect();
    controls.update();

    element.addEventListener('click', fullscreen, false);

    window.removeEventListener('deviceorientation', setOrientationControls);
  }

	window.addEventListener('deviceorientation', setOrientationControls, true);


  var light = new THREE.HemisphereLight(0x777777, 0x000000, 0.6);
  scene.add(light);


	// SkyBox

  // alert $('#example').data('url')
  var picture_url = $('#example').data('url') || $('#vr').data('url');
  // var picture_url = container.data('url'); 
  console.log(picture_url);

  THREE.ImageUtils.crossOrigin = '';
	var sphere = new THREE.Mesh(
		new THREE.SphereGeometry(100*4, 32*4, 32*4),
		new THREE.MeshBasicMaterial({
			// map: THREE.ImageUtils.loadTexture("<%= asset_path('marspano2.jpg') %>")
      map: THREE.ImageUtils.loadTexture( picture_url )


		})
	);

	sphere.scale.x = -1;

	scene.add(sphere);
	

  window.addEventListener('resize', resize, false);
  setTimeout(resize, 1);
}

function resize() {
  var width = container.offsetWidth;
  var height = container.offsetHeight;

  camera.aspect = width / height;
  camera.updateProjectionMatrix();

  renderer.setSize(width, height);
  if( vr == true ){
    effect.setSize(width, height);
  }
}

function update(dt) {
  resize();

  camera.updateProjectionMatrix();

  controls.update(dt);
}

function render(dt) {

  renderer.render( scene, camera );
  if( vr == true ){
    effect.render(scene, camera);
  }
}

function animate(t) {
  requestAnimationFrame(animate);

  update(clock.getDelta());
  render(clock.getDelta());
}

function fullscreen() {
  if (container.requestFullscreen) {
    container.requestFullscreen();
  } else if (container.msRequestFullscreen) {
    container.msRequestFullscreen();
  } else if (container.mozRequestFullScreen) {
    container.mozRequestFullScreen();
  } else if (container.webkitRequestFullscreen) {
    container.webkitRequestFullscreen();
  }
}